for (i in 1:ncol(loan_data)) {
if (class((loan_data[,i])) == 'factor') {
cat_cols[j]=names(loan_data[i])
j <- j+1
}
}
loan_fact <-  loan_data[cat_cols]
# long format
loan_factm <- melt(loan_fact, measure.vars = cat_cols, variable.name = 'metric', value.name = 'value')
# plot categorical columns
ggplot(loan_factm, aes(x = value)) +
geom_bar() +
scale_fill_brewer(palette = "Set1") +
facet_wrap( ~ metric, nrow = 5L, scales = 'free') + coord_flip()
plot_histogram(loan_data, geom_histogram_args = list("fill" = "tomato4"))
chart = BarChart(alphabet, {
x: d => d.letter,
loan_factm
loan_fact
loan_fact %>%
gather()
loan_fact %>%
gather() %>%
group_by(key) %>%
summarise(count = n(value))
loan_fact %>%
gather() %>%
group_by(key) %>%
summarise(count = n())
loan_data
loan_fact
loan_fact %>%
gather() %>%
group_by(key, value) %>%
summarise(table(n()))
loan_fact %>%
gather() %>%
group_by(key, value) %>%
summarise(count(n()))
loan_fact %>%
gather() %>%
group_by(key, value) %>%
summarise(n())
loan_fact %>%
gather() %>%
group_by(key, value) %>%
summarise(n()) %>%
prop.table(margin = 1)
loan_fact %>%
gather() %>%
group_by(key, value) %>%
summarise(n())
loan_fact %>%
gather() %>%
group_by(key, value) %>%
summarise(n(),
length(loan_fact))
loan_fact %>%
gather() %>%
group_by(key, value) %>%
summarise(n(),
length(loan_fact$Credit_History))
loan_fact %>%
gather() %>%
group_by(key, value) %>%
summarise(freq = n(),
total = length(loan_fact$Credit_History),
freq/total)
loan_fact %>%
gather() %>%
group_by(key, value) %>%
summarise(freq = n(),
total = length(loan_fact$Credit_History),
percent = (freq/total)*100)
loan_fact %>%
gather() %>%
group_by(key, value) %>%
summarise(freq = n(),
total = length(loan_fact$Credit_History),
percent = round((freq/total)*100, 2))
loan_fact %>%
gather() %>%
group_by(key, value) %>%
summarise(freq = n(),
total = length(loan_fact$Credit_History),
percent = round((freq/total)*100, 1))
loan_fact %>%
gather() %>%
group_by(key, value) %>%
summarise(freq = n(),
total = length(loan_fact$Credit_History),
percent = round((freq/total)*100, 2))
loan_fact %>%
gather() %>%
group_by(key) %>%
summarise(count = n())
loan_fact %>%
gather() %>%
group_by(key, value) %>%
summarise(freq = n(),
total = length(loan_fact$Credit_History),
percent = round((freq/total)*100, 2))
loan_fact %>%
gather() %>%
group_by(key, value) %>%
summarise(freq = n(),
total = length(loan_fact$Credit_History),
percent = round((freq/total)*100, 2)) %>%
na.omit()
loan_fact %>%
gather() %>%
group_by(key, value) %>%
summarise(freq = n(),
total = length(loan_fact$Credit_History),
percent = round((freq/total)*100, 2))
loan_fact %>%
gather() %>%
group_by(key, value) %>%
summarise(freq = n(),
total = length(loan_fact$Credit_History),
percent = round((freq/total)*100, 2)) %>%
replace_na("Missing")
loan_fact %>%
gather() %>%
group_by(key, value) %>%
summarise(freq = n(),
total = length(loan_fact$Credit_History),
percent = round((freq/total)*100, 2)) %>%
replace_na(value, "Missing")
loan_fact %>%
gather() %>%
group_by(key, value) %>%
summarise(freq = n(),
total = length(loan_fact$Credit_History),
percent = round((freq/total)*100, 2))
loan_fact %>%
gather() %>%
group_by(key, value) %>%
summarise(freq = n(),
total = length(loan_fact$Credit_History),
percent = round((freq/total)*100, 2)) %>%
replace(., "missing", values=value)
loan_fact %>%
gather() %>%
group_by(key, value) %>%
summarise(freq = n(),
total = length(loan_fact$Credit_History),
percent = round((freq/total)*100, 2))
fact_freq_table <- loan_fact %>%
gather() %>%
group_by(key, value) %>%
summarise(freq = n(),
total = length(loan_fact$Credit_History),
percent = round((freq/total)*100, 2))
fact_freq_table[is.na()]
which(is.na(fact_freq_table)
///
which(is.na(fact_freq_table))
fact_freq_table[which(is.na(fact_freq_table))]
fact_freq_table[which(is.na(fact_freq_table)),]
fact_freq_table[which(is.na(fact_freq_table)),] <- "Missing"
fact_freq_table[which(is.na(fact_freq_table)),] <- "Missing"
fact_freq_table[which(is.na(fact_freq_table)),]
fact_freq_table <- loan_fact %>%
gather() %>%
group_by(key, value) %>%
summarise(freq = n(),
total = length(loan_fact$Credit_History),
percent = round((freq/total)*100, 2))
fact_freq_table[which(is.na(fact_freq_table)),]
loan_fact %>%
gather() %>%
group_by(key, value) %>%
summarise(freq = n(),
total = length(loan_fact$Credit_History),
percent = round((freq/total)*100, 2))
fact_freq_table$value[which(is.na(fact_freq_table$value)),]
fact_freq_table$value[which(is.na(fact_freq_table$value))]
fact_freq_table$value[which(is.na(fact_freq_table$value))] <- "Missing"
fact_freq_table
fact_freq_table <- loan_fact %>%
gather() %>%
group_by(key, value) %>%
summarise(freq = n(),
total = length(loan_fact$Credit_History),
percent = round((freq/total)*100, 2))
fact_freq_table$value[which(is.na(fact_freq_table$value))] <- "Missing"
fact_freq_table
robservable(
"https://observablehq.com/@juba/robservable-bar-chart",
include = c("chart", "draw"),
hide = "draw",
input = list(data = fact_freq_table),
width = 700
)
write.csv(fact_freq_table, "frequency_table.csv")
robservable(
"https://observablehq.com/d/41253cf8682abbb3#chart",
include = c("chart", "draw"),
hide = "draw",
input = list(data = fact_freq_table),
width = 700
)
robservable(
"https://observablehq.com/@palmorezm/barchart",
include = c("chart", "draw"),
hide = "draw",
input = list(data = fact_freq_table),
width = 700
)
fact_freq_table %>%
filter(key = "Education")
fact_freq_table %>%
filter(key == "Education")
data <- fact_freq_table %>%
filter(key == "Education")
robservable(
"https://observablehq.com/@palmorezm/barchart",
include = c("chart", "draw"),
hide = "draw",
input = list(data = data),
width = 700
)
View(data)
write.csv(data, "Graduation.csv")
write.csv(loan_fact, "loan_factors.csv")
loan_fact
loan_fact %>%
gather()
data <- loan_fact %>%
gather()
write.csv(data, "loan_factors.csv")
table(mtcars$cyl)
data.frame(table(mtcars$cyl))
fact_freq_table
loan_fact
loan_fact
robservable(
"https://observablehq.com/@palmorezm/input-and-chart",
include = c("chart", "draw"),
hide = "draw",
input = list(data = data),
width = 700
)
View(data)
load(penguins)
load('palmer-penguins')
install.packages("palmerpenguins")
data(package = 'palmerpenguins')
load("penguins")
library(palmerpenguins)
data <- palmerpenguins::penguins
View(data)
library(palmerpenguins)
data <- palmerpenguins::penguins
robservable(
"https://observablehq.com/@palmorezm/input-and-chart",
include = c("chart", "draw"),
hide = "draw",
input = list(data = data),
width = 700
)
library(palmerpenguins)
data <- palmerpenguins::penguins
library(robservable)
robservable(
"https://observablehq.com/@palmorezm/input-and-chart",
include = c("chart", "draw"),
hide = "draw",
input = list(data = data),
width = 700
)
robservable(
"https://observablehq.com/@juba/draggable-pie-donut-chart",
include = c("chart", "draw"),
hide = "draw",
input = list(data = df),
width = 700
)
df <- data.frame(table(mtcars$cyl))
names(df) <- c("name", "value")
robservable(
"https://observablehq.com/@juba/draggable-pie-donut-chart",
include = c("chart", "draw"),
hide = "draw",
input = list(data = df),
width = 700
)
data.frame(table(loan_fact))
fact_freq_table
fact_freq_table %>%
select(key, percent)
fact_freq_table %>%
select("key", "percent")
fact_freq_table %>%
dplyr::select("key", "percent")
fact_freq_table %>%
dplyr::select("key", "percent") %>%
rename(name = key, value = percent)
fact_freq_table %>%
dplyr::select("value", "percent") %>%
rename(name = value, value = percent)
fact_freq_table %>%
dplyr::select(key, "value", "percent") %>%
rename(name = value, value = percent)
df <- fact_freq_table %>%
dplyr::select(key, "value", "percent") %>%
rename(name = value, value = percent)
robservable(
"https://observablehq.com/@juba/draggable-pie-donut-chart",
include = c("chart", "draw"),
hide = "draw",
input = list(data = df),
width = 700
)
df <- df %>%
filter(key == "Credit_History")
robservable(
"https://observablehq.com/@juba/draggable-pie-donut-chart",
include = c("chart", "draw"),
hide = "draw",
input = list(data = df),
width = 700
)
df <- fact_freq_table %>%
dplyr::select(key, "value", "freq") %>%
rename(name = value, value = freq)
df <- df %>%
filter(key == "Credit_History")
robservable(
"https://observablehq.com/@juba/draggable-pie-donut-chart",
include = c("chart", "draw"),
hide = "draw",
input = list(data = df),
width = 700
)
df <- fact_freq_table %>%
dplyr::select(key, "value", "freq", percent) %>%
rename(name = value, value = freq)
df <- df %>%
filter(key == "Credit_History")
robservable(
"https://observablehq.com/@juba/draggable-pie-donut-chart",
include = c("chart", "draw"),
hide = "draw",
input = list(data = df),
width = 700
)
df <- df %>%
filter(key == "Education")
robservable(
"https://observablehq.com/@juba/draggable-pie-donut-chart",
include = c("chart", "draw"),
hide = "draw",
input = list(data = df),
width = 700
)
df <- fact_freq_table %>%
dplyr::select(key, "value", "freq", percent) %>%
rename(name = value, value = freq)
View(df)
df <- df %>%
filter(key == "Education")
robservable(
"https://observablehq.com/@juba/draggable-pie-donut-chart",
include = c("chart", "draw"),
hide = "draw",
input = list(data = df),
width = 700
)
View(df)
View(fact_freq_table)
df <- fact_freq_table %>%
dplyr::select(key, "value", "freq", percent) %>%
rename(name = value, value = freq)
df <- df %>%
filter(key == "Dependents")
robservable(
"https://observablehq.com/@juba/draggable-pie-donut-chart",
include = c("chart", "draw"),
hide = "draw",
input = list(data = df),
width = 700
)
write.csv(df, "C:/Users/Zachary Palmore/GitHub/misc/Loans/dependents.csv")
library(shiny)
library(robservable)
data("USPersonalExpenditure")
ui <- fluidPage(
titlePanel("robservable basic Shiny app"),
sidebarLayout(
sidebarPanel(
selectInput(
"year",
label = "Year",
choices = colnames(USPersonalExpenditure)
)
),
mainPanel(
robservableOutput("chart", width = 600)
)
)
)
server <- function(input, output) {
df <- reactive({
data.frame(
name = rownames(USPersonalExpenditure),
value = USPersonalExpenditure[, input$year]
)
})
output$chart <- renderRobservable({
robservable(
"@juba/robservable-bar-chart",
include = "chart",
input = list(
data = df(),
x = "value",
y = "name",
margin = list(top = 20, right = 20, bottom = 30, left = 130)
),
width = 600
)
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(shinyjs)
# Select type of trend to plot
selected <- shiny::selectInput(inputId = "type",
label = strong("Type"),
choices = unique(df$key),
selected = "Dependents")
df <- fact_freq_table %>%
dplyr::select(key, "value", "freq", percent) %>%
rename(name = value, value = freq)
unique(df$key)
shiny::selectInput(inputId = "type",
label = strong("Type"),
choices = unique(df$key),
selected = "Dependents")
# Select type of trend to plot
ui <- fluidPage(
titlePanel("robservable basic Shiny app"),
sidebarLayout(
sidebarPanel(
shiny::selectInput(inputId = "type",
label = strong("Choose Factor"),
choices = unique(df$key),
selected = "Dependents"))
),
mainPanel(
robservableOutput("chart", width = 600)
)
)
# Select type of trend to plot
ui <- fluidPage(
titlePanel("robservable basic Shiny app"),
sidebarLayout(
sidebarPanel(
shiny::selectInput(inputId = "type",
label = strong("Choose Factor"),
choices = unique(df$key),
selected = "Dependents")),
mainPanel(
robservableOutput("chart", width = 700)
)
))
server <- function(input, output) {
df <- reactive({
df %>%
dplyr:filter(input$type)})
output$chart <- renderRobservable({
robservable(
"https://observablehq.com/@juba/draggable-pie-donut-chart",
include = c("chart", "draw"),
hide = "draw",
input = list(data = df),
width = 700
)
})
}
robservable(
df <- fact_freq_table %>%
dplyr::select(key, "value", "freq", percent) %>%
rename(name = value, value = freq)
df <- df %>%
fact_freq_table <- loan_fact %>%
gather() %>%
group_by(key, value) %>%
summarise(freq = n(),
total = length(loan_fact$Credit_History),
percent = round((freq/total)*100, 2))
fact_freq_table$value[which(is.na(fact_freq_table$value))] <- "Missing"
df <- fact_freq_table %>%
dplyr::select(key, "value", "freq", percent) %>%
rename(name = value, value = freq)
df <- df %>%
filter(key == "Dependents")
shiny::selectInput(inputId = "type",
label = strong("Factor Selection"),
choices = unique(df$key),
selected = "Dependents")
robservable(
"https://observablehq.com/@juba/draggable-pie-donut-chart",
include = c("chart", "draw"),
hide = "draw",
input = list(data = df),
width = 700
)
library(ggplotly)
ggplot(loan_dep, aes(x=Dependents, y=Freq, fill=Dependents)) + geom_bar(stat='identity') + labs(title = 'Approved Loans by Dependents', y = "Percentage", x = "Dependents")
setwd("C:/Users/Zachary Palmore/GitHub/showcase")
